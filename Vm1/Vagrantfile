Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.provider "virtualbox" do |vb|
  vb.name = "VagrantVM1"
  vb.gui = false
  vb.memory = "4096"
  vb.cpus = 2
  end

  config.vm.hostname = "VagrantVM1"
  config.vm.synced_folder ".", "/home/vagrant/code",
  owner: "www-data", group: "www-data"

  #Grafana
  config.vm.network "forwarded_port", guest: 3000, host: 33010
  #Prometheus
  config.vm.network "forwarded_port", guest: 9090, host: 33020
  #AlertManager
  config.vm.network "forwarded_port", guest: 9093, host: 33030
  #NodeExporter
  config.vm.network "forwarded_port", guest: 9100, host: 33040


  #Download and install all services
  config.vm.provision "shell", path: "installation.sh"

  #Prometheus 
  config.vm.provision "file", source: "./prometheus.yml", destination: "/tmp/prometheus.yml"
  config.vm.provision "file", source: "./prometheus.service", destination: "/tmp/prometheus.service"

  config.vm.provision "shell", inline: "mv /tmp/prometheus.yml /etc/prometheus/prometheus.yml"
  config.vm.provision "shell", inline: "mv /tmp/prometheus.service /etc/systemd/system/prometheus.service"

  #AlertManager 
  config.vm.provision "file", source: "alertmanager.yml", destination: "/tmp/alertmanager.yml"
  config.vm.provision "file", source: "alertmanager.service", destination: "/tmp/alertmanager.service"
  config.vm.provision "file", source: "alert.rules.yml", destination: "/tmp/alert.rules.yml"

  #NodeExporter
  config.vm.provision "file", source: "node_exporter.service", destination: "/tmp/node_exporter.service"

  #Move all config files to destinations
  config.vm.provision "shell", inline: "mv /tmp/alert.rules.yml /etc/prometheus/alert.rules.yml"
  config.vm.provision "shell", inline: "mv /tmp/node_exporter.service /etc/systemd/system/node_exporter.service"
  config.vm.provision "shell", inline: "mv /tmp/alertmanager.yml /etc/alertmanager/alertmanager.yml"
  config.vm.provision "shell", inline: "mv /tmp/alertmanager.service /etc/systemd/system/alertmanager.service"

  #Start all services 
  config.vm.provision "shell", path: "restart-services.sh"

end
